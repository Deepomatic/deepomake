#!/bin/sh

# Shell commands follow
# Next line is bilingual: it starts a comment in Python, and is a no-op in shell
""":"

# Find a suitable python interpreter
for cmd in python3 python2 ; do
   command -v > /dev/null $cmd && exec $cmd $0 "$@"
done

echo "Python not found, exiting!" >2

exit 2

":"""
# Previous line is bilingual: it ends a comment in Python, and is a no-op in shell
# Shell commands end here
# Python script follows (example commands shown)


#
# Usage:
# dmake_replace_vars_from_file VAR_NAME var_file input_file [output_file]
#
# Result:
# Replace all ${VAR_NAME} schemes by their value in the environment.
# If output_file is not defined then it prints to stdout

import os
import sys

if len(sys.argv) < 4:
    print("Usage: dmake_replace_vars_from_file VAR_NAME var_file input_file [output_file]")
    sys.exit(1)

var_name   = sys.argv[1]
var_file   = sys.argv[2]
input_file = sys.argv[3]

with open(var_file, 'r') as f:
    os.environ[var_name] = f.read()

if len(sys.argv) == 4:
    os.system("dmake_replace_vars %s" % input_file)
else:
    output_file = sys.argv[4]
    os.system("dmake_replace_vars %s %s" % (input_file, output_file))
