#!/bin/bash
#
# Usage:
# dmake_run_docker_link APP_NAME IMAGE_NAME LINK_NAME PROBE_PORTS ARGS...
#
# Result:
# Run a docker link and cache the result (call dmake_return_docker_links to export the docker options)

test "${DMAKE_DEBUG}" = "1" && set -x

if [ $# -lt 4 ]; then
    dmake_fail "$0: Missing arguments"
    exit 1
fi

if [ -z "${DMAKE_TMP_DIR}" ]; then
    dmake_fail "Missing environment variable DMAKE_TMP_DIR"
    exit 1
fi

set -e

APP_NAME=$1; shift
IMAGE_NAME=$1; shift
LINK_NAME=$1; shift
PROBE_PORTS=$1; shift
OPTIONS=( $@ )

BASE_NAME=${REPO}.${BRANCH}.${BUILD}.${APP_NAME}.${LINK_NAME}

COUNT=0
while [ 1 = 1 ]; do
    CONTAINER_NAME=$BASE_NAME.$COUNT
    if [ `docker ps -a -f name=$CONTAINER_NAME | wc -l | sed "s/ *//"` = "1" ]; then # There is a header line
        break
    fi
    COUNT=$(($COUNT+1))
done

docker pull ${IMAGE_NAME} 2> /dev/null || :
CONTAINER_ID=$(dmake_run_docker_daemon "${APP_NAME}" "${LINK_NAME}" "${CONTAINER_NAME}" ${OPTIONS[@]} ${VOLUMES} -i ${IMAGE_NAME})
dmake_wait_for_probe_ports "${CONTAINER_ID}" "${PROBE_PORTS}"
