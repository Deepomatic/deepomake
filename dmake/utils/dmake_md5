#!/bin/bash
#
# Usage:
# MD5=$(dmake_md5 file [version])
#
# Result:
# Returns the file's MD5.

test "${DMAKE_DEBUG}" = "1" && set -x

if [ $# -ne 1 -a $# -ne 2 ]; then
    dmake_fail "$0: Missing arguments"
    echo "exit 1"
    exit 1
fi

if [ ! -e "$1" ]; then
    dmake_fail "$0: File or directory $1 does not exist."
    echo "exit 1"
    exit 1
fi

set -e

TARGET=$1
VERSION=${2:-1}

# Command get md5 from piped list of files
if [ `which md5sum | wc -l` = "0" ]; then
    # MacOS compatibility
    CMD="md5"
    COLUMN="4"
else
    # Linux
    CMD="md5sum"
    COLUMN="1"
fi

if [ -f ${TARGET} ]; then
    # For files, directly get the md5
    $CMD ${TARGET} | cut -d ' ' -f $COLUMN
elif [ ${VERSION} -eq 1 ]; then
    # For a directory, it hashes the list of MD5s
    echo $(dmake_find $1 -type f -print0 | xargs -0 $CMD | cut -d ' ' -f $COLUMN | $CMD)
elif [ ${VERSION} -eq 2 ]; then
  # For a directory, it hashes the set of MD5s+filepath (ordered for stability)
    pushd ${TARGET} >& /dev/null
    find . -type f -print0 | xargs -0 $CMD | LC_ALL=C sort | $CMD | cut -d ' ' -f $COLUMN
    popd >& /dev/null
else
    dmake_fail "$0: Invalid version: ${VERSION}"
    echo "exit 1"
    exit 1
fi
